#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/trackball_pim447.h> 

/ {
    chosen {
        zmk,kscan = &kscan0;
		  zmk,matrix_transform = &default_transform;
    };

	 default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <4>;
        rows = <1>;
        map = <
		     RC(0,0)  RC(0,1)
			  RC(0,2)  RC(0,3)
        >;
	 };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-direct";
        label = "KSCAN";
        input-gpios
		  = <&pro_micro 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		  , <&pro_micro 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        , <&pro_micro 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
        , <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		  ;
    };

    &pro_micro_i2c {
	     status = "okay";
	     trackball_pim447@a {
		      compatible = "pimoroni,trackball_pim447";
		      reg = <0xa>;
		      label = "TRACKBALL_PIM447";
		
		      move-factor = <1>;      // Increase pointer velocity (default: 1)
		      //invert-move-x;          // Invert pointer X axis (left is right, and vice versa)
		      //invert-move-y;          // Invert pointer Y axis (up is down, and vice versa)
		      button = <1>;           // Send right-click when pressing the ball (default: 0 = left click, 1 = right click, 2 = middle click?)
		      //swap-axes;              // Swap X and Y axes (horizontal is vertical, and vice versa)
		      scroll-divisor = <1>;   // Increase wheel velocity (default: 2)
		      //invert-scroll-x;        // Invert wheel X axis (left is right, and vice versa)
		      //invert-scroll-y;        // Invert wheel Y axis (up is down, and vice versa)
		      mode = <PIM447_SCROLL>; // Act as mouse wheels at startup (default: PIM447_MOVE for a pointer)
	    };
   };
};
